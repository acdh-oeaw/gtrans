# Generated by Django 3.2.4 on 2021-06-14 12:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('idprovider', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('vocabs', '0001_initial'),
        ('entities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchResource',
            fields=[
                ('idprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='idprovider.idprovider')),
                ('col_id', models.CharField(blank=True, help_text="The collection's Identifier", max_length=25, verbose_name='Collection ID')),
                ('doc_id', models.CharField(blank=True, help_text="The document's Identifier", max_length=25, verbose_name='Document ID')),
                ('title', models.CharField(blank=True, help_text='Titel des Dokuments', max_length=500, verbose_name='Titel des Dokuments')),
                ('signature', models.TextField(blank=True, help_text='(Archiv)Signatur', verbose_name='(Archiv)Signatur')),
                ('written_date', models.CharField(blank=True, help_text='Datum original', max_length=250, verbose_name='Datum original')),
                ('not_before', models.DateField(blank=True, help_text='YYYY-MM-DD', null=True, verbose_name='Nicht vor normalisiert')),
                ('not_after', models.DateField(blank=True, help_text='YYYY-MM-DD', null=True, verbose_name='Nicht nach normalisiert')),
                ('subject_free', models.TextField(blank=True, help_text='Schlagwörter original', null=True, verbose_name='Schlagwörter original')),
                ('abstract', models.TextField(blank=True, help_text='Zusammenfassung', null=True, verbose_name='Zusammenfassung')),
                ('notes', models.TextField(blank=True, help_text='Anmerkungen', null=True, verbose_name='Anmerkungen')),
                ('permalink', models.CharField(blank=True, help_text='Stabiler Link zu einem Digitalisat dieser Resource', max_length=500, null=True, verbose_name='Permalink')),
                ('archiv', models.ForeignKey(blank=True, help_text='Archiv in dem das Dokument aufbewahrt wird', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='has_docs_archived', to='entities.institution', verbose_name='Archiv')),
                ('creator_inst', models.ManyToManyField(blank=True, help_text='Erzeuger des Dokuments(Institution)', related_name='created_by_inst', to='entities.Institution', verbose_name='Erzeuger des Dokuments(Institution)')),
                ('creator_person', models.ManyToManyField(blank=True, help_text='Erzeuger des Dokuments', related_name='created_by_person', to='entities.Person', verbose_name='Erzeuger des Dokuments(Person)')),
                ('creators', models.ManyToManyField(blank=True, help_text='Verantwortlich für die Erzeugung dieses Datensatzes', related_name='created_archres', to=settings.AUTH_USER_MODEL, verbose_name='Verantwortlich')),
                ('mentioned_inst', models.ManyToManyField(blank=True, help_text='Im Dokument erwähnte Institution', related_name='inst_mentioned_in_res', to='entities.Institution', verbose_name='Im Dokument erwähnte Institution')),
                ('mentioned_person', models.ManyToManyField(blank=True, help_text='Im Dokument erwähnte Person', related_name='pers_mentioned_in_res', to='entities.Person', verbose_name='Im Dokument erwähnte Person')),
                ('mentioned_place', models.ManyToManyField(blank=True, help_text='Im Dokument erwähnte Orte', related_name='place_mentioned_in_res', to='entities.Place', verbose_name='Im Dokument erwähnte Orte')),
                ('rel_res', models.ManyToManyField(blank=True, help_text='In Verbindung stehende Dokumente', related_name='related_res', to='archiv.ArchResource', verbose_name='In Verbindung stehende Dokumente')),
                ('res_type', models.ForeignKey(blank=True, help_text='Typ des Dokuments.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doc_type', to='vocabs.skosconcept', verbose_name='Typ des Dokuments')),
                ('subject_norm', models.ManyToManyField(blank=True, help_text='Schlagwörter normalisiert', related_name='subject_norm_of', to='vocabs.SkosConcept', verbose_name='Schlagwörter normalisiert')),
            ],
            options={
                'verbose_name': 'Archivalie',
            },
            bases=('idprovider.idprovider', models.Model),
        ),
    ]
